name: "Build ðŸ”¨"

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: "Build ðŸ”¨"
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        platform: ['iOS', 'tvOS']

    runs-on: macos-15

    steps:    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Fetch Commit Info
        id: commitinfo
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: Install SwiftGen
        run: brew install swiftgen

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Cache Carthage
        uses: actions/cache@v4
        id: carthage-cache
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
          restore-keys: ${{ runner.os }}-carthage-

      - name: Update Carthage
        run: carthage update --use-xcframeworks --cache-builds

      - name: Build ${{ matrix.platform }}
        run: xcodebuild -project "Swiftfin.xcodeproj" -scheme Swiftfin-${{ matrix.platform }} -clonedSourcePackagesDirPath PackageCache -configuration Release -destination generic/platform=${{ matrix.platform }} archive -archivePath "build/Swiftfin.${{ matrix.platform }}.xcarchive" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      - name: Package ${{ matrix.platform }}
        run: ./Misc/scripts/package.sh "build/Swiftfin.${{ matrix.platform }}.xcarchive" ${{ matrix.platform }} "Swiftfin.${{ steps.commitinfo.outputs.sha_short }}.${{ matrix.platform }}"

      - name: Upload ${{ matrix.platform }} Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Swiftfin.${{ steps.commitinfo.outputs.sha_short }}.${{ matrix.platform }}
          path: build/*
          if-no-files-found: error
